<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java面经-1</title>
      <link href="/post/48c2.html"/>
      <url>/post/48c2.html</url>
      
        <content type="html"><![CDATA[<h1 id="腾迅后台开发一面"><a href="#腾迅后台开发一面" class="headerlink" title="腾迅后台开发一面"></a>腾迅后台开发一面</h1><h3 id="1-讲一下TCP三次握手，为什么要三次，两次或者四次不行吗"><a href="#1-讲一下TCP三次握手，为什么要三次，两次或者四次不行吗" class="headerlink" title="1.讲一下TCP三次握手，为什么要三次，两次或者四次不行吗"></a>1.讲一下TCP三次握手，为什么要三次，两次或者四次不行吗</h3><blockquote><p>TCP建立连接时，通过三次握手能<strong>防止历史连接的建立，能减少双方不必要的资源开销，能帮助双方同步初始化序列号</strong>。序列号能够保证数据包不重复、不丢弃和按需传输。</p><p>不使用<strong>两次握手</strong>和<strong>四次握手</strong>的原因：</p><ul><li>两次握手：无法防止历史连接的建立，会造成双方资源的浪费，也无法可靠的同步双方序列号；</li><li>四次握手：三次握手就已经理论上最少可靠连接建立，所以不需要使用更多的通信次数；</li></ul></blockquote><h3 id="2-讲一下常见的针对TCP的网络攻击？如何应对SYN-flood攻击？"><a href="#2-讲一下常见的针对TCP的网络攻击？如何应对SYN-flood攻击？" class="headerlink" title="2.讲一下常见的针对TCP的网络攻击？如何应对SYN flood攻击？"></a>2.讲一下常见的针对TCP的网络攻击？如何应对SYN flood攻击？</h3><blockquote><p><strong>常见的针对TCP的网络攻击</strong></p><ul><li><strong>SYN Flood攻击</strong>：这是一种利用TCP协议握手过程中的缺陷进行的攻击。攻击者发送大量的TCP SYN请求到目标服务器，但在收到服务器的SYN+ACK响应后并不发送最后的ACK确认，导致服务器上留下大量等待完成的半开连接，耗尽服务器资源，使得正常的TCP连接无法建立。</li><li><strong>TCP回话劫持</strong>：这种攻击方式是通过窃取TCP会话中的序列号等信息，然后冒充合法用户接入到会话中。攻击者可以监听网络上的TCP会话，分析并预测序列号，然后发送伪造的数据包，中断或篡改原有的会话内容。</li><li><strong>TCP重置攻击</strong>：在这种攻击中，攻击者发送伪造的TCP RST（重置）数据包到目标主机，中断正常的TCP连接。由于TCP协议的设计，当接收到RST数据包时，连接的两端都会关闭连接，这使得攻击者可以成功地中断服务或进行拒绝服务攻击。</li></ul></blockquote><blockquote><p><strong>如何应对SYN flood攻击？</strong></p><ol><li>启用SYN Cookie技术：SYN Cookie是一种无状态的TCP连接技术，它通过计算一个独特的Cookie来验证TCP连接的合法性，而不需要在服务器上保存每个连接的状态信息。当服务器收到SYN请求时，它会计算一个Cookie并发送给客户端，客户端在后续的ACK报文中携带该Cookie，服务器通过验证Cookie的有效性来判断连接是否合法。这样可以有效减少服务器资源的消耗，并防止SYN Flood攻击导致的资源耗尽。</li><li>调整TCP协议栈参数：通过调整TCP协议栈的参数，可以优化服务器的性能和防御SYN Flood攻击。例如，可以减小SYN Timeout时间，使服务器更快地释放无效的链接请求；增大TCP连接的队列长度，提高服务器处理连接请求的能力；启用TCP Fast Open等特性，加快TCP连接的建立过程。</li><li>使用防火墙或入侵检测系统（IDS）：防火墙或IDS可以监控网络流量，并识别出异常的SYN请求流量。它们可以根据预设的规则对恶意流量进行过滤或限制，从而保护服务器免受SYN Flood攻击的侵害。</li></ol></blockquote><h3 id="3-讲一下TCP的TIME-WAIT状态，如果服务器中存在大量的这个状态应该怎么排查？"><a href="#3-讲一下TCP的TIME-WAIT状态，如果服务器中存在大量的这个状态应该怎么排查？" class="headerlink" title="3.讲一下TCP的TIME_WAIT状态，如果服务器中存在大量的这个状态应该怎么排查？"></a>3.讲一下TCP的TIME_WAIT状态，如果服务器中存在大量的这个状态应该怎么排查？</h3><blockquote><p><strong>介绍TIME_WAIT状态</strong>：当TCP连接的一方（通常是客户端）主动关闭连接时，会发送一个FIN包给对方，表示希望关闭连接。服务端通常会回一个ACK确认包。当服务端也完成发送后，会再次发送一个FIN包给客户端，此时客户端接收到FIN后会回复一个ACK给服务端，之后客户端会进入TIME_WAIT状态。在TIME_WAIT状态下，连接会保持一段时间（通常是2MSL，即最大报文段生存时间的两倍），以确保在网络中延迟的数据包能够被正确处理。</p><p><img src="https://cdn.jsdelivr.net/gh/mrxmxm/blog-img/blog-imgD2B5CA33BD970F64A6301FA75AE2EB22.png"></p></blockquote><blockquote><p><strong>如何排查TIME_WAIT</strong></p><ol><li><p><strong>确认TIME_WAIT状态的数量</strong>： 使用<code>netstat</code>命令来查看当前TCP连接的状态分布。例如，运行<code>netstat -nat | grep TIME_WAIT | wc -l</code>可以查看TIME_WAIT状态的连接数。</p></li><li><p><strong>查看系统TCP参数</strong>： 使用<code>sysctl -a | grep tcp</code>命令可以查看系统中与TCP相关的内核参数设置，特别关注<code>net.ipv4.tcp_tw_reuse</code>、<code>net.ipv4.tcp_tw_recycle</code>（在某些情况下可能不推荐启用）和<code>net.ipv4.tcp_fin_timeout</code>等参数的设置。</p></li><li><p><strong>分析网络连接和应用程序行为</strong>： 确定哪些应用程序或服务正在产生大量的TIME_WAIT连接。使用<code>netstat -natp</code>可以查看每个连接的进程ID和程序名称。</p></li><li><p><strong>检查网络问题和延迟</strong>： 网络问题或延迟可能导致连接不能正常关闭，从而产生大量的TIME_WAIT状态。使用网络诊断工具（如<code>ping</code>、<code>traceroute</code>等）来检查网络状况。</p></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java - 腾讯 </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客部署</title>
      <link href="/post/9365.html"/>
      <url>/post/9365.html</url>
      
        <content type="html"><![CDATA[<h2 id="测试是否能否显示文字"><a href="#测试是否能否显示文字" class="headerlink" title="测试是否能否显示文字"></a>测试是否能否显示文字</h2><p><img src="https://cdn.jsdelivr.net/gh/tianzhijiaozi123/blog-img/blog-img89b21dc8-9be9-466e-a4b0-5759a7897f76-1709370908863.png"></p><h4 id="兔子和小狗"><a href="#兔子和小狗" class="headerlink" title="兔子和小狗"></a>兔子和小狗</h4><p><img src="https://cdn.jsdelivr.net/gh/tianzhijiaozi123/blog-img/blog-imgdog-rabbit.png"></p><h2 id="部署流程"><a href="#部署流程" class="headerlink" title="部署流程"></a>部署流程</h2><h3 id="文章发布"><a href="#文章发布" class="headerlink" title="文章发布"></a>文章发布</h3><blockquote><p>进入 <strong>F:\Blog\source_posts</strong> 文件夹，然后右键 <strong>git bash</strong> ，再输入命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npx hexo new post &quot;新建博客文件名&quot;</span><br></pre></td></tr></table></figure><p>之后就在该文件夹中生成一个新的md文件，就可以在该文件中书写博客了，每次写完博客要上传部署时，输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npx hexo cl   #清空缓存</span><br><span class="line">npx hexo g    #上传静态文件</span><br><span class="line">npx hexo s    #进行保存，然后就可以在本地访问了</span><br><span class="line"># 最后就是上传部署</span><br><span class="line">npx hexo d</span><br></pre></td></tr></table></figure></blockquote><h3 id="更新配置"><a href="#更新配置" class="headerlink" title="更新配置"></a>更新配置</h3><p>更新hexo配置一般在**_config.yml<strong>文件中，更新</strong>butterfly<strong>主题配置在</strong>_config.butterfly.yml**文件中</p><p>主题中相关图片背景的地址放在<strong>F:\Blog\themes\butterfly\source\img</strong>文件夹下，在该文件夹下进行图片更换</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/3eeb.html"/>
      <url>/post/3eeb.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>上传新的图片</p><p><img src="https://st.tencent-cloud.com/qb/tool/images/fa45a96f-cad1-4a5d-a426-678e85662f57.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
